name: Create Repo

on:
  issues:
    types: [opened, edited]

jobs:
  process_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.SETUP_APP_ID }}
          application_private_key: ${{ secrets.SETUP_APP_PRIVATE_KEY }}
      - name: Set Token
        run: |
          echo "GITHUB_TOKEN=${{ steps.get_workflow_token.outputs.token }}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Print issue title and body
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"
          
      - name: Check Organization Membership
        run: |
          USERNAME=${{ github.event.issue.user.login }}
          ORG_NAME="Maua-Dev"
          
          # get info from gh api
          response=$(gh api "/orgs/$ORG_NAME/members/$USERNAME" | jq -r '.message')

          echo "Response: $response"

          if [ "$response" != "" ]; then
            echo "User is not a member of the organization"
            gh issue comment ${{ github.event.issue.number }} -b "Hi @$USERNAME, you are not a member of the organization. Please join the organization before creating a new repo.  "
            gh issue close ${{ github.event.issue.number }}  -c "User is not a member of the organization :warning:"
            exit 1
          else
            echo "User is a member of the organization"
          fi
          
      - name: Check if issue title starts with [NEW_REPO]
        if: startsWith(github.event.issue.title, '[NEW_REPO]')
        run: |
          echo "Processing issue with title starting with [NEW_REPO]"
          echo "${{ github.event.issue.body }}" > project_details.txt

          project_name=$(grep -A 2 "### project_name" project_details.txt | tail -n 1)
          project_name=$(echo $project_name | tr -d '\r')
          project_name=$(echo $project_name | tr ' ' '_')
          project_name=$(echo $project_name | tr '[:upper:]' '[:lower:]')

          description=$(grep -A 2 "### description" project_details.txt | tail -n 1)
          description=$(echo $description | tr -d '\r')
          description=$(echo $description | tr -d '\n')

          privacy_type=$(grep -A 2 "### privacy_type" project_details.txt | tail -n 1)
          privacy_type=$(echo $privacy_type | tr -d '\r')
          
          project_template=$(grep -A 2 "### project_template" project_details.txt | tail -n 1)
          project_template=$(echo $project_template | cut -d' ' -f1)

          team=$(grep -A 2 "### team" project_details.txt | tail -n 1)
          team=$(echo $team | tr -d '\r')
          
          echo "Project Name: $project_name"
          echo "Description: $description"
          echo "Privacy Type: $privacy_type"
          echo "Project Template: $project_template"
          echo "Team: $team"

          echo "project_name=$project_name" >> $GITHUB_ENV
          echo "description=$description" >> $GITHUB_ENV
          echo "privacy_type=$privacy_type" >> $GITHUB_ENV
          echo "project_template=$project_template" >> $GITHUB_ENV
          echo "team=$team" >> $GITHUB_ENV
      
    outputs:
      project_name: ${{ env.project_name }}
      description: ${{ env.description }}
      privacy_type: ${{ env.privacy_type }}
      project_template: ${{ env.project_template }}
      team: ${{ env.team }}

  create_repo:
    needs: process_issue
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '[NEW_REPO]')
    env:
      repo_name: ${{needs.process_issue.outputs.project_name}}
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.SETUP_APP_ID }}
          application_private_key: ${{ secrets.SETUP_APP_PRIVATE_KEY }}
      - name: Set Token
        run: |
          echo "GITHUB_TOKEN=${{ steps.get_workflow_token.outputs.token }}" >> $GITHUB_ENV
      - name: Create Repo
        run: |
          echo "Creating repo: ${{needs.process_issue.outputs.project_name}}"
          echo "Description: ${{needs.process_issue.outputs.description}}"
          echo "Privacy Type: ${{needs.process_issue.outputs.privacy_type}}"
          echo "Project Template: ${{needs.process_issue.outputs.project_template}}"

          if [ "${{needs.process_issue.outputs.project_template}}" == "None" ]; then
            gh repo create Maua-Dev/${{needs.process_issue.outputs.project_name}} --${{needs.process_issue.outputs.privacy_type}} -d "${{needs.process_issue.outputs.description}}" --add-readme
          else
            gh repo create Maua-Dev/${{needs.process_issue.outputs.project_name}} --${{needs.process_issue.outputs.privacy_type}} -d "${{needs.process_issue.outputs.description}}" --template Maua-Dev/${{needs.process_issue.outputs.project_template}}
            fi
          gh repo edit Maua-Dev/${{needs.process_issue.outputs.project_name}} --enable-issues --delete-branch-on-merge

          if [ "${{needs.process_issue.outputs.team}}" != "None" ]; then
            gh api -X PUT /orgs/Maua-Dev/teams/${{needs.process_issue.outputs.team}}/repos/Maua-Dev/${{needs.process_issue.outputs.project_name}} --raw-field "permission=push"
          fi

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: "Maua-Dev/${{needs.process_issue.outputs.project_name}}"

      - name: Add Branch Protection Dev
        run: |
          
          curl -vv -L \
            -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/Maua-Dev/$repo_name/branches/dev/protection" \
            -d '{
              "required_status_checks": {
                "strict": true,
                "contexts": ["check_owner/Check & Validate PR Owner"]
              },
              "enforce_admins": false,
              "required_pull_request_reviews": {
                "dismiss_stale_reviews": false,
                "require_code_owner_reviews": false,
                "required_approving_review_count": 1,
                "require_last_push_approval": false
              },
              "restrictions": null,
              "required_linear_history": false,
              "allow_force_pushes": false,
              "allow_deletions": false,
              "block_creations": false,
              "required_conversation_resolution": false,
              "lock_branch": false,
              "allow_fork_syncing": false
            }'
      - name: Create Homolog
        run: |
          sha_ref=$(gh api \
            --method GET \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/Maua-Dev/$repo_name/git/refs/heads/dev" | jq -r '.object.sha')
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/Maua/$repo_name/git/refs" \
            -f ref='refs/heads/homolog' \
            -f sha=$sha_ref
      - name: Add Branch Protection Homolog
        run: |
          curl -vv -L \
            -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/Maua-Dev/$repo_name/branches/homolog/protection" \
            -d '{
              "required_status_checks": {
                "strict": true,
                "contexts": ["check_owner/Check & Validate PR Owner"]
              },
              "enforce_admins": false,
              "required_pull_request_reviews": {
                "dismiss_stale_reviews": false,
                "require_code_owner_reviews": false,
                "required_approving_review_count": 1,
                "require_last_push_approval": false
              },
              "restrictions": null,
              "required_linear_history": false,
              "allow_force_pushes": false,
              "allow_deletions": false,
              "block_creations": false,
              "required_conversation_resolution": false,
              "lock_branch": false,
              "allow_fork_syncing": false
            }'
      - name: Create Production
        run: |
          sha_ref=$(gh api \
            --method GET \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/Maua-Dev/$repo_name/git/refs/heads/prod" | jq -r '.object.sha')
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/Maua/$repo_name/git/refs" \
            -f ref='refs/heads/production' \
            -f sha=$sha_ref
      - name: Add Branch Protection Homolog
        run: |
          curl -vv -L \
            -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/Maua-Dev/$repo_name/branches/prod/protection" \
            -d '{
              "required_status_checks": {
                "strict": true,
                "contexts": ["check_owner/Check & Validate PR Owner"]
              },
              "enforce_admins": false,
              "required_pull_request_reviews": {
                "dismiss_stale_reviews": false,
                "require_code_owner_reviews": false,
                "required_approving_review_count": 1,
                "require_last_push_approval": false
              },
              "restrictions": null,
              "required_linear_history": false,
              "allow_force_pushes": false,
              "allow_deletions": false,
              "block_creations": false,
              "required_conversation_resolution": false,
              "lock_branch": false,
              "allow_fork_syncing": false
            }'  
  close_issue:
    needs: create_repo
    runs-on: ubuntu-latest
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.SETUP_APP_ID }}
          application_private_key: ${{ secrets.SETUP_APP_PRIVATE_KEY }}
      - name: Set Token
        run: |
          echo "GITHUB_TOKEN=${{ steps.get_workflow_token.outputs.token }}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Close Issue
        run: |
          echo "Closing issue"
          gh issue close ${{ github.event.issue.number }} -c "Thanks for using the Issue to repo creation! :smile: Now you can find your repo at [${{needs.process_issue.outputs.project_name}}](https://github.com/Maua-Dev/${{needs.process_issue.outputs.project_name}}) :rocket:"

