name: Create Repo

on:
  issues:
    types: [opened, edited]

jobs:
  process_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Print issue title and body
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"
          
      - name: Process issue
        if: startsWith(github.event.issue.title, '[NEW_REPO]')
        run: |
          echo "Processing issue with title starting with [NEW_REPO]"
          echo "${{ github.event.issue.body }}" > project_details.txt

          project_name=$(grep -A 2 "### project_name" project_details.txt | tail -n 1)
          project_name=$(echo $project_name | tr -d '\r')
          project_name=$(echo $project_name | tr ' ' '_')

          description=$(grep -A 2 "### description" project_details.txt | tail -n 1)
          description=$(echo $description | tr -d '\r')
          description=$(echo $description | tr -d '\n')

          privacy_type=$(grep -A 2 "### privacy_type" project_details.txt | tail -n 1)
          privacy_type=$(echo $privacy_type | tr -d '\r')
          
          project_template=$(grep -A 2 "### project_template" project_details.txt | tail -n 1)
          project_template=$(echo $project_template | cut -d' ' -f1)
          CI_CD=$(grep -A 2 "### CI_CD" project_details.txt | tail -n 1)
          
          echo "Project Name: $project_name"
          echo "Description: $description"
          echo "Privacy Type: $privacy_type"
          echo "Project Template: $project_template"
          echo "CI_CD: $CI_CD"

          echo "project_name=$project_name" >> $GITHUB_ENV
          echo "description=$description" >> $GITHUB_ENV
          echo "privacy_type=$privacy_type" >> $GITHUB_ENV
          echo "project_template=$project_template" >> $GITHUB_ENV
          echo "CI_CD=$CI_CD" >> $GITHUB_ENV
    outputs:
      project_name: ${{ env.project_name }}
      description: ${{ env.description }}
      privacy_type: ${{ env.privacy_type }}
      project_template: ${{ env.project_template }}
      CI_CD: ${{ env.CI_CD }}

  create_repo:
    needs: process_issue
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '[NEW_REPO]')
    env:
      GITHUB_TOKEN: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Repo
        run: |
          echo "Creating repo: ${{needs.process_issue.outputs.project_name}}"
          echo "Description: ${{needs.process_issue.outputs.description}}"
          echo "Privacy Type: ${{needs.process_issue.outputs.privacy_type}}"
          echo "Project Template: ${{needs.process_issue.outputs.project_template}}"
          echo "CI_CD: ${{needs.process_issue.outputs.CI_CD}}"

          ## create if Project Template is none
          if [ "${{needs.process_issue.outputs.project_template}}" == "None" ]; then
            gh repo create Maua-Dev/${{needs.process_issue.outputs.project_name}} --${{needs.process_issue.outputs.privacy_type}} -d "${{needs.process_issue.outputs.description}}" --add-readme
          else
            gh repo create Maua-Dev/${{needs.process_issue.outputs.project_name}} --${{needs.process_issue.outputs.privacy_type}} -d "${{needs.process_issue.outputs.description}}" --include-all-branches --template Maua-Dev/${{needs.process_issue.outputs.project_template}}
          fi
      - name:
        run: |
          echo "Closing issue"
          gh issue close ${{ github.event.issue.number }}  -c "Thanks for using the Issue to repo creation! :smile: Now you can find your repo at [github.com/Maua-Dev/${{needs.process_issue.outputs.project_name}}](github.com/Maua-Dev/${{needs.process_issue.outputs.project_name}}) :rocket:"