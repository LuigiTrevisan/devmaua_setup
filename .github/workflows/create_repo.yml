name: Create Repo

on:
  issues:
    types: [opened, edited]

jobs:
  process_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Print issue title and body
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"

      - name: Check Organization Membership
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
        run: |
          USERNAME=${{ github.event.issue.user.login }}
          ORG_NAME="Maua-Dev"
          
          # get info from gh api
          response=$(gh api /orgs/$ORG_NAME/members/$USERNAME | jq -r '.message')

          echo "Response: $response"

          if [ "$response" != "" ]; then
            echo "User is not a member of the organization"
            gh issue comment ${{ github.event.issue.number }} -b "Hi @$USERNAME, you are not a member of the organization. Please join the organization before creating a new repo.  "
            gh issue close ${{ github.event.issue.number }}  -c "User is not a member of the organization :warning:"
            exit 1
          else
            echo "User is a member of the organization"
          fi
          
      - name: Check if issue title starts with [NEW_REPO]
        if: startsWith(github.event.issue.title, '[NEW_REPO]')
        run: |
          echo "Processing issue with title starting with [NEW_REPO]"
          echo "${{ github.event.issue.body }}" > project_details.txt

          project_name=$(grep -A 2 "### project_name" project_details.txt | tail -n 1)
          project_name=$(echo $project_name | tr -d '\r')
          project_name=$(echo $project_name | tr ' ' '_')

          description=$(grep -A 2 "### description" project_details.txt | tail -n 1)
          description=$(echo $description | tr -d '\r')
          description=$(echo $description | tr -d '\n')

          privacy_type=$(grep -A 2 "### privacy_type" project_details.txt | tail -n 1)
          privacy_type=$(echo $privacy_type | tr -d '\r')
          
          project_template=$(grep -A 2 "### project_template" project_details.txt | tail -n 1)
          project_template=$(echo $project_template | cut -d' ' -f1)

          team=$(grep -A 2 "### team" project_details.txt | tail -n 1)
          team=$(echo $team | tr -d '\r')
          
          echo "Project Name: $project_name"
          echo "Description: $description"
          echo "Privacy Type: $privacy_type"
          echo "Project Template: $project_template"
          echo "Team: $team"

          echo "project_name=$project_name" >> $GITHUB_ENV
          echo "description=$description" >> $GITHUB_ENV
          echo "privacy_type=$privacy_type" >> $GITHUB_ENV
          echo "project_template=$project_template" >> $GITHUB_ENV
          echo "team=$team" >> $GITHUB_ENV
      
    outputs:
      project_name: ${{ env.project_name }}
      description: ${{ env.description }}
      privacy_type: ${{ env.privacy_type }}
      project_template: ${{ env.project_template }}
      team: ${{ env.team }}

  create_repo:
    needs: process_issue
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '[NEW_REPO]')
    env:
      GITHUB_TOKEN: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Repo
        run: |
          echo "Creating repo: ${{needs.process_issue.outputs.project_name}}"
          echo "Description: ${{needs.process_issue.outputs.description}}"
          echo "Privacy Type: ${{needs.process_issue.outputs.privacy_type}}"
          echo "Project Template: ${{needs.process_issue.outputs.project_template}}"

          if [ "${{needs.process_issue.outputs.project_template}}" == "None" ]; then
            gh repo create Maua-Dev/${{needs.process_issue.outputs.project_name}} --${{needs.process_issue.outputs.privacy_type}} -d "${{needs.process_issue.outputs.description}}" --add-readme
            else
            gh repo create Maua-Dev/${{needs.process_issue.outputs.project_name}} --${{needs.process_issue.outputs.privacy_type}} -d "${{needs.process_issue.outputs.description}}" --include-all-branches --template Maua-Dev/${{needs.process_issue.outputs.project_template}}
            fi
          gh repo edit Maua-Dev/${{needs.process_issue.outputs.project_name}} --enable-issues --delete-branch-on-merge

          if [ "${{needs.process_issue.outputs.team}}" != "None" ]; then
            gh api -X PUT /orgs/Maua-Dev/teams/${{needs.process_issue.outputs.team}}/repos/Maua-Dev/${{needs.process_issue.outputs.project_name}} --raw-field "permission=push"
          fi
          
      - name: Add Branch Protection
        run: |
          repo_name=${{needs.process_issue.outputs.project_name}}

          echo "Adding branch protection to dev branch of $repo_name"
          
          curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/Maua-Dev/$repo_name/branches/dev/protection \
          -d '{"required_status_checks":{"strict":true,"contexts":["continuous-integration/travis-ci"]},"enforce_admins":true,"required_pull_request_reviews":{"dismissal_restrictions":{"users":["octocat"],"teams":["justice-league"]},"dismiss_stale_reviews":true,"require_code_owner_reviews":true,"required_approving_review_count":2,"bypass_pull_request_allowances":{"users":["octocat"],"teams":["justice-league"]}},"restrictions":{"users":["octocat"],"teams":["justice-league"]}}'        

      - name:
        run: |
          echo "Closing issue"
          gh issue close ${{ github.event.issue.number }}  -c "Thanks for using the Issue to repo creation! :smile: Now you can find your repo at [${{needs.process_issue.outputs.project_name}}](https://github.com/Maua-Dev/${{needs.process_issue.outputs.project_name}}) :rocket:"